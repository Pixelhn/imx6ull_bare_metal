#ifndef __PAD_H__
#define __PAD_H__

/*!
 * @addtogroup IOMUXC_SNVS_Register_Masks IOMUXC_SNVS Register Masks
 * @{
 */

/*! @name SW_MUX_CTL_PAD - SW_MUX_CTL_PAD_BOOT_MODE0 SW MUX Control Register..SW_MUX_CTL_PAD_SNVS_TAMPER9 SW MUX Control Register */
#define IOMUXC_SNVS_SW_MUX_CTL_PAD_MUX_MODE_MASK (0xFU)
#define IOMUXC_SNVS_SW_MUX_CTL_PAD_MUX_MODE_SHIFT (0U)
#define IOMUXC_SNVS_SW_MUX_CTL_PAD_MUX_MODE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SNVS_SW_MUX_CTL_PAD_MUX_MODE_SHIFT)) & IOMUXC_SNVS_SW_MUX_CTL_PAD_MUX_MODE_MASK)
#define IOMUXC_SNVS_SW_MUX_CTL_PAD_SION_MASK     (0x10U)
#define IOMUXC_SNVS_SW_MUX_CTL_PAD_SION_SHIFT    (4U)
#define IOMUXC_SNVS_SW_MUX_CTL_PAD_SION(x)       (((uint32_t)(((uint32_t)(x)) << IOMUXC_SNVS_SW_MUX_CTL_PAD_SION_SHIFT)) & IOMUXC_SNVS_SW_MUX_CTL_PAD_SION_MASK)

/* The count of IOMUXC_SNVS_SW_MUX_CTL_PAD */
#define IOMUXC_SNVS_SW_MUX_CTL_PAD_COUNT         (12U)

/*! @name SW_PAD_CTL_PAD - SW_PAD_CTL_PAD_TEST_MODE SW PAD Control Register..SW_PAD_CTL_PAD_SNVS_TAMPER9 SW PAD Control Register */
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_SRE_MASK      (0x1U)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_SRE_SHIFT     (0U)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_SRE(x)        (((uint32_t)(((uint32_t)(x)) << IOMUXC_SNVS_SW_PAD_CTL_PAD_SRE_SHIFT)) & IOMUXC_SNVS_SW_PAD_CTL_PAD_SRE_MASK)

#define IOMUXC_SNVS_SW_PAD_CTL_PAD_DSE_MASK      (0x38U)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_DSE_SHIFT     (3U)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_DSE(x)        (((uint32_t)(((uint32_t)(x)) << IOMUXC_SNVS_SW_PAD_CTL_PAD_DSE_SHIFT)) & IOMUXC_SNVS_SW_PAD_CTL_PAD_DSE_MASK)

#define IOMUXC_SNVS_SW_PAD_CTL_PAD_SPEED_MASK    (0xC0U)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_SPEED_SHIFT   (6U)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_SPEED(x)      (((uint32_t)(((uint32_t)(x)) << IOMUXC_SNVS_SW_PAD_CTL_PAD_SPEED_SHIFT)) & IOMUXC_SNVS_SW_PAD_CTL_PAD_SPEED_MASK)

#define IOMUXC_SNVS_SW_PAD_CTL_PAD_ODE_MASK      (0x800U)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_ODE_SHIFT     (11U)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_ODE(x)        (((uint32_t)(((uint32_t)(x)) << IOMUXC_SNVS_SW_PAD_CTL_PAD_ODE_SHIFT)) & IOMUXC_SNVS_SW_PAD_CTL_PAD_ODE_MASK)

#define IOMUXC_SNVS_SW_PAD_CTL_PAD_PKE_MASK      (0x1000U)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_PKE_SHIFT     (12U)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_PKE(x)        (((uint32_t)(((uint32_t)(x)) << IOMUXC_SNVS_SW_PAD_CTL_PAD_PKE_SHIFT)) & IOMUXC_SNVS_SW_PAD_CTL_PAD_PKE_MASK)

#define IOMUXC_SNVS_SW_PAD_CTL_PAD_PUE_MASK      (0x2000U)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_PUE_SHIFT     (13U)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_PUE(x)        (((uint32_t)(((uint32_t)(x)) << IOMUXC_SNVS_SW_PAD_CTL_PAD_PUE_SHIFT)) & IOMUXC_SNVS_SW_PAD_CTL_PAD_PUE_MASK)

#define IOMUXC_SNVS_SW_PAD_CTL_PAD_PUS_MASK      (0xC000U)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_PUS_SHIFT     (14U)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_PUS(x)        (((uint32_t)(((uint32_t)(x)) << IOMUXC_SNVS_SW_PAD_CTL_PAD_PUS_SHIFT)) & IOMUXC_SNVS_SW_PAD_CTL_PAD_PUS_MASK)

#define IOMUXC_SNVS_SW_PAD_CTL_PAD_HYS_MASK      (0x10000U)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_HYS_SHIFT     (16U)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_HYS(x)        (((uint32_t)(((uint32_t)(x)) << IOMUXC_SNVS_SW_PAD_CTL_PAD_HYS_SHIFT)) & IOMUXC_SNVS_SW_PAD_CTL_PAD_HYS_MASK)

/* The count of IOMUXC_SNVS_SW_PAD_CTL_PAD */
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_COUNT         (17U)


/*!
 * @}
 */ /* end of group IOMUXC_SNVS_Register_Masks */

//压摆率 0
#define SRE_SLOW    IOMUXC_SNVS_SW_PAD_CTL_PAD_SRE(0)
#define SRE_FAST    IOMUXC_SNVS_SW_PAD_CTL_PAD_SRE(1)

//IO驱动能力 3-5
#define DSE_0_R0_0  IOMUXC_SNVS_SW_PAD_CTL_PAD_DSE(0)
#define DSE_1_R0_1  IOMUXC_SNVS_SW_PAD_CTL_PAD_DSE(1)
#define DSE_2_R0_2  IOMUXC_SNVS_SW_PAD_CTL_PAD_DSE(2)
#define DSE_3_R0_3  IOMUXC_SNVS_SW_PAD_CTL_PAD_DSE(3)
#define DSE_4_R0_4  IOMUXC_SNVS_SW_PAD_CTL_PAD_DSE(4)
#define DSE_5_R0_5  IOMUXC_SNVS_SW_PAD_CTL_PAD_DSE(5)
#define DSE_6_R0_6  IOMUXC_SNVS_SW_PAD_CTL_PAD_DSE(6)
#define DSE_7_R0_7  IOMUXC_SNVS_SW_PAD_CTL_PAD_DSE(7)

//IO速度6-7
#define SPEED_50    IOMUXC_SNVS_SW_PAD_CTL_PAD_SPEED(0)
#define SPEED_100   IOMUXC_SNVS_SW_PAD_CTL_PAD_SPEED(1)
#define SPEED_200   IOMUXC_SNVS_SW_PAD_CTL_PAD_SPEED(3)

//开路输出(输出) 11
#define ODE_ENABLE  IOMUXC_SNVS_SW_PAD_CTL_PAD_ODE(1)
#define ODE_DISABL  IOMUXC_SNVS_SW_PAD_CTL_PAD_ODE(0)

//使能PUE PUS 12 
#define PKE_ENABLE  IOMUXC_SNVS_SW_PAD_CTL_PAD_PKE(1)
#define PKE_DISABL  IOMUXC_SNVS_SW_PAD_CTL_PAD_PKE(0)

//保持器(输入)与上下拉选择 13
#define PUE_KEEP    IOMUXC_SNVS_SW_PAD_CTL_PAD_PUE(0)
#define PUE_DOUP    IOMUXC_SNVS_SW_PAD_CTL_PAD_PUE(1)

//上下拉选择 14-15
#define PUS_100_DOWN    IOMUXC_SNVS_SW_PAD_CTL_PAD_PUS(0)
#define PUS_47_UP       IOMUXC_SNVS_SW_PAD_CTL_PAD_PUS(1)
#define PUS_100_UP      IOMUXC_SNVS_SW_PAD_CTL_PAD_PUS(2)
#define PUS_22_UP       IOMUXC_SNVS_SW_PAD_CTL_PAD_PUS(3)

//迟滞比较器(输入) 16
#define HYS_ENABLE  IOMUXC_SNVS_SW_PAD_CTL_PAD_HYS(1)
#define HYS_DISABL  IOMUXC_SNVS_SW_PAD_CTL_PAD_HYS(0)

 #endif