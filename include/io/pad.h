

#define SRE_0_Slow_Slew_Rate 0x0U
#define SRE_1_Fast_Slew_Rate 0x1U

#define DSE_0_output_driver_disabled 0X000U
#define DSE_1_R0_1  0X001U
#define DSE_2_R0_2  0X010U
#define DSE_3_R0_3  0X011U
#define DSE_4_R0_4  0X100U
#define DSE_5_R0_5  0X101U
#define DSE_6_R0_6  0X110U
#define DSE_7_R0_7  0X111U
/*!
 * @addtogroup IOMUXC_SNVS_Register_Masks IOMUXC_SNVS Register Masks
 * @{
 */

/*! @name SW_MUX_CTL_PAD - SW_MUX_CTL_PAD_BOOT_MODE0 SW MUX Control Register..SW_MUX_CTL_PAD_SNVS_TAMPER9 SW MUX Control Register */
#define IOMUXC_SNVS_SW_MUX_CTL_PAD_MUX_MODE_MASK (0xFU)
#define IOMUXC_SNVS_SW_MUX_CTL_PAD_MUX_MODE_SHIFT (0U)
#define IOMUXC_SNVS_SW_MUX_CTL_PAD_MUX_MODE(x)   (((uint32_t)(((uint32_t)(x)) << IOMUXC_SNVS_SW_MUX_CTL_PAD_MUX_MODE_SHIFT)) & IOMUXC_SNVS_SW_MUX_CTL_PAD_MUX_MODE_MASK)
#define IOMUXC_SNVS_SW_MUX_CTL_PAD_SION_MASK     (0x10U)
#define IOMUXC_SNVS_SW_MUX_CTL_PAD_SION_SHIFT    (4U)
#define IOMUXC_SNVS_SW_MUX_CTL_PAD_SION(x)       (((uint32_t)(((uint32_t)(x)) << IOMUXC_SNVS_SW_MUX_CTL_PAD_SION_SHIFT)) & IOMUXC_SNVS_SW_MUX_CTL_PAD_SION_MASK)

/* The count of IOMUXC_SNVS_SW_MUX_CTL_PAD */
#define IOMUXC_SNVS_SW_MUX_CTL_PAD_COUNT         (12U)

/*! @name SW_PAD_CTL_PAD - SW_PAD_CTL_PAD_TEST_MODE SW PAD Control Register..SW_PAD_CTL_PAD_SNVS_TAMPER9 SW PAD Control Register */
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_SRE_MASK      (0x1U)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_SRE_SHIFT     (0U)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_SRE(x)        (((uint32_t)(((uint32_t)(x)) << IOMUXC_SNVS_SW_PAD_CTL_PAD_SRE_SHIFT)) & IOMUXC_SNVS_SW_PAD_CTL_PAD_SRE_MASK)

#define IOMUXC_SNVS_SW_PAD_CTL_PAD_DSE_MASK      (0x38U)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_DSE_SHIFT     (3U)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_DSE(x)        (((uint32_t)(((uint32_t)(x)) << IOMUXC_SNVS_SW_PAD_CTL_PAD_DSE_SHIFT)) & IOMUXC_SNVS_SW_PAD_CTL_PAD_DSE_MASK)

#define IOMUXC_SNVS_SW_PAD_CTL_PAD_SPEED_MASK    (0xC0U)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_SPEED_SHIFT   (6U)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_SPEED(x)      (((uint32_t)(((uint32_t)(x)) << IOMUXC_SNVS_SW_PAD_CTL_PAD_SPEED_SHIFT)) & IOMUXC_SNVS_SW_PAD_CTL_PAD_SPEED_MASK)

#define IOMUXC_SNVS_SW_PAD_CTL_PAD_ODE_MASK      (0x800U)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_ODE_SHIFT     (11U)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_ODE(x)        (((uint32_t)(((uint32_t)(x)) << IOMUXC_SNVS_SW_PAD_CTL_PAD_ODE_SHIFT)) & IOMUXC_SNVS_SW_PAD_CTL_PAD_ODE_MASK)

#define IOMUXC_SNVS_SW_PAD_CTL_PAD_PKE_MASK      (0x1000U)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_PKE_SHIFT     (12U)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_PKE(x)        (((uint32_t)(((uint32_t)(x)) << IOMUXC_SNVS_SW_PAD_CTL_PAD_PKE_SHIFT)) & IOMUXC_SNVS_SW_PAD_CTL_PAD_PKE_MASK)

#define IOMUXC_SNVS_SW_PAD_CTL_PAD_PUE_MASK      (0x2000U)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_PUE_SHIFT     (13U)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_PUE(x)        (((uint32_t)(((uint32_t)(x)) << IOMUXC_SNVS_SW_PAD_CTL_PAD_PUE_SHIFT)) & IOMUXC_SNVS_SW_PAD_CTL_PAD_PUE_MASK)

#define IOMUXC_SNVS_SW_PAD_CTL_PAD_PUS_MASK      (0xC000U)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_PUS_SHIFT     (14U)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_PUS(x)        (((uint32_t)(((uint32_t)(x)) << IOMUXC_SNVS_SW_PAD_CTL_PAD_PUS_SHIFT)) & IOMUXC_SNVS_SW_PAD_CTL_PAD_PUS_MASK)

#define IOMUXC_SNVS_SW_PAD_CTL_PAD_HYS_MASK      (0x10000U)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_HYS_SHIFT     (16U)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_HYS(x)        (((uint32_t)(((uint32_t)(x)) << IOMUXC_SNVS_SW_PAD_CTL_PAD_HYS_SHIFT)) & IOMUXC_SNVS_SW_PAD_CTL_PAD_HYS_MASK)

/* The count of IOMUXC_SNVS_SW_PAD_CTL_PAD */
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_COUNT         (17U)


/*!
 * @}
 */ /* end of group IOMUXC_SNVS_Register_Masks */